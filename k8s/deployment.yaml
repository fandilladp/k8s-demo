apiVersion: apps/v1
kind: Deployment
metadata:
  name: hpa-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hpa-demo
  template:
    metadata:
      labels:
        app: hpa-demo
    spec:
      containers:
      - name: nginx
        image: nginx:stable
        ports:
        - containerPort: 80
        resources:
          requests:
            cpu: 10m
          limits:
            cpu: 20m
---
apiVersion: v1
kind: Service
metadata:
  name: hpa-demo
spec:
  selector:
    app: hpa-demo
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    nodePort: 30080   # port fix di node
  type: NodePort
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: hpa-demo
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: hpa-demo
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 50
  behavior:
    scaleUp:
      # pilih strategi (Max = pilih policy dengan nilai terbesar)
      selectPolicy: Max
      policies:
        # boleh tambah pods by count (mis. +3 pods / 15s)
        - type: Pods
          value: 3
          periodSeconds: 10
        # atau percentage (mis. 200% artinya duplikasi cepat)
        - type: Percent
          value: 200
          periodSeconds: 10
      # (opsional) kalau mau batasi frekuensi scale up
    scaleDown:
      # pilih Min agar lebih konservatif memilih kebijakan paling kecil (mencegah penghapusan berlebih)
      selectPolicy: Min
      policies:
        # reduce cepat: boleh 100% atau beberapa pods
        - type: Percent
          value: 100
          periodSeconds: 10
        - type: Pods
          value: 2
          periodSeconds: 10
      # semakin kecil stabilizationWindowSeconds => scale down lebih cepat
      stabilizationWindowSeconds: 15
